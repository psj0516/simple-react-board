{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\dev\\\\react-basic\\\\simple-react-board\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser from 'react-html-parser';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [boardContent, setBoardContent] = useState({\n    title: '',\n    content: ''\n  });\n  const [viewContent, setViewContent] = useState([]);\n\n  const getValue = e => {\n    const {\n      name,\n      value\n    } = e.target; // boardContent의 내용을 복사해서 name이라는 키값을 value로 바꿔 저장\n\n    setBoardContent({ ...boardContent,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    Axios.get('http://localhost:8000/api/get').then(response => {\n      console.log(response);\n    });\n  });\n\n  const submitReview = () => {\n    Axios.post('http://localhost:8000/api/insert', {\n      title: boardContent.title,\n      content: boardContent.title\n    }).then(() => {\n      alert('등록 완료!');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC8C\\uC2DC\\uD310 \\uB9CC\\uB4E4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: viewContent.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: element.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: ReactHtmlParser(element.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title-input\",\n        type: \"text\",\n        placeholder: \"\\uC81C\\uBAA9\",\n        onChange: getValue,\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        editor: ClassicEditor,\n        data: \"\",\n        onReady: editor => {\n          console.log('editor is ready to use', editor);\n        },\n        onChange: (event, editor) => {\n          const data = editor.getData();\n          setBoardContent({ ...boardContent,\n            content: data\n          });\n        },\n        onBlur: (event, editor) => {},\n        onFocus: (event, editor) => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: submitReview,\n      children: \"\\uC785\\uB825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9gjXFbb/Q0/oRA/UEqevFdTysjY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/dev/react-basic/simple-react-board/client/src/App.js"],"names":["useEffect","useState","CKEditor","ClassicEditor","ReactHtmlParser","Axios","App","boardContent","setBoardContent","title","content","viewContent","setViewContent","getValue","e","name","value","target","get","then","response","console","log","submitReview","post","alert","map","element","editor","event","data","getData"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC;AAC/CQ,IAAAA,KAAK,EAAE,EADwC;AAE/CC,IAAAA,OAAO,EAAE;AAFsC,GAAD,CAAhD;AAKA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMY,QAAQ,GAAGC,CAAC,IAAI;AACpB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB,CADoB,CAEpB;;AACAT,IAAAA,eAAe,CAAC,EACd,GAAGD,YADW;AAEd,OAACQ,IAAD,GAAQC;AAFM,KAAD,CAAf;AAID,GAPD;;AASAhB,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,KAAK,CAACa,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAY;AAC1DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAFD;AAGD,GAJQ,CAAT;;AAMA,QAAMG,YAAY,GAAG,MAAI;AACvBlB,IAAAA,KAAK,CAACmB,IAAN,CAAW,kCAAX,EAA+C;AAC7Cf,MAAAA,KAAK,EAAEF,YAAY,CAACE,KADyB;AAE7CC,MAAAA,OAAO,EAAEH,YAAY,CAACE;AAFuB,KAA/C,EAGGU,IAHH,CAGQ,MAAI;AACVM,MAAAA,KAAK,CAAC,QAAD,CAAL;AACD,KALD;AAMD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGd,WAAW,CAACe,GAAZ,CAAgBC,OAAO,iBACxB;AAAA,gCACE;AAAA,oBAAKA,OAAO,CAAClB;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACGL,eAAe,CAACuB,OAAO,CAACjB,OAAT;AADlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADC;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,WAAW,EAAC,cAAvD;AACA,QAAA,QAAQ,EAAEG,QADV;AACoB,QAAA,IAAI,EAAC;AADzB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,QAAD;AACE,QAAA,MAAM,EAAEV,aADV;AAEE,QAAA,IAAI,EAAC,EAFP;AAGE,QAAA,OAAO,EAAEyB,MAAM,IAAI;AACjBP,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCM,MAAtC;AACC,SALL;AAME,QAAA,QAAQ,EAAE,CAACC,KAAD,EAAQD,MAAR,KAAmB;AAC3B,gBAAME,IAAI,GAAGF,MAAM,CAACG,OAAP,EAAb;AACAvB,UAAAA,eAAe,CAAC,EACd,GAAGD,YADW;AAEdG,YAAAA,OAAO,EAAEoB;AAFK,WAAD,CAAf;AAID,SAZH;AAaE,QAAA,MAAM,EAAE,CAACD,KAAD,EAAQD,MAAR,KAAmB,CAC1B,CAdH;AAeE,QAAA,OAAO,EAAE,CAACC,KAAD,EAAQD,MAAR,KAAmB,CAC3B;AAhBH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAmCE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AACA,MAAA,OAAO,EAAEL,YADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAxEQjB,G;;KAAAA,G;AA0ET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\nimport ReactHtmlParser from 'react-html-parser';\nimport Axios from 'axios';\n\nfunction App() {\n  const [boardContent, setBoardContent] = useState({\n    title: '',\n    content: ''\n  })\n\n  const [viewContent, setViewContent] = useState([])\n\n  const getValue = e => {\n    const {name, value} = e.target;\n    // boardContent의 내용을 복사해서 name이라는 키값을 value로 바꿔 저장\n    setBoardContent({\n      ...boardContent,\n      [name]: value\n    })\n  }\n\n  useEffect(()=>{\n    Axios.get('http://localhost:8000/api/get').then((response)=>{\n      console.log(response);\n    })\n  })\n\n  const submitReview = ()=>{\n    Axios.post('http://localhost:8000/api/insert', {\n      title: boardContent.title,\n      content: boardContent.title\n    }).then(()=>{\n      alert('등록 완료!');\n    })\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>게시판 만들기</h1>\n      <div className=\"board-container\">\n        {viewContent.map(element =>\n        <div>\n          <h2>{element.title}</h2>\n          <div>\n            {ReactHtmlParser(element.content)}\n          </div>\n        </div>\n        )}\n      </div>\n      <div className=\"form-wrapper\">\n        <input className=\"title-input\" type='text' placeholder='제목'\n        onChange={getValue} name=\"title\" />\n        <CKEditor \n          editor={ClassicEditor}\n          data=\"\"\n          onReady={editor => {\n            console.log('editor is ready to use', editor);\n            }}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            setBoardContent({\n              ...boardContent,\n              content: data\n            })\n          }}\n          onBlur={(event, editor) => {\n          }}\n          onFocus={(event, editor) => {\n          }}\n          />\n\n      </div>\n      <button className='submit-button'\n      onClick={submitReview}>입력</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}